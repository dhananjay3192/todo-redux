{"version":3,"sources":["action/action-types.js","components/TodoList.js","action/todo.js","components/TodoForm.js","reducer/todo.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_COMPLETE","connect","state","todos","dispatch","remove","id","type","payload","removeTodo","toggleComplete","ListGroup","className","map","todo","ListGroupItem","title","onClick","completed","addTodo","useState","setTitle","handleSubmit","e","preventDefault","alert","nanoid","Container","Form","onSubmit","FormGroup","InputGroup","Input","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","initialState","rootReducer","combineReducers","action","filter","store","createStore","App","Row","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAaA,EAAW,WACXC,EAAc,cACdC,EAAkB,kB,OCoChBC,eAXS,SAAAC,GAAK,MAAK,CAC9BC,MAAOD,EAAMC,UAEU,SAAAC,GAAQ,MAAK,CACpCC,OAAQ,SAACC,GACLF,ECzBkB,SAAAE,GAAE,MAAK,CAC7BC,KAAMR,EACNS,QAASF,GDuBIG,CAAWH,KAExBI,eAAiB,SAACJ,GACdF,ECvBsB,SAAAE,GAAE,MAAK,CACjCC,KAAMP,EACNQ,QAASF,GDqBII,CAAeJ,QAGjBL,EA9BE,SAAC,GAAqC,IAApCE,EAAmC,EAAnCA,MAAOO,EAA4B,EAA5BA,eAAgBL,EAAY,EAAZA,OAEtC,OACI,cAACM,EAAA,EAAD,CAAWC,UAAU,YAArB,SACKT,EAAMU,KAAI,SAACC,GAAD,OACP,eAACC,EAAA,EAAD,CAA6BH,UAAU,UAAvC,UACI,+BAAOE,EAAKE,QACZ,iCACI,sBAAMJ,UAAU,YAAYK,QAAS,kBAAMP,EAAeI,EAAKR,KAA/D,SAAsEQ,EAAKI,UAAW,cAAC,IAAD,IAAkB,cAAC,IAAD,MACxG,sBAAMN,UAAU,YAAYK,QAAS,kBAAIZ,EAAOS,EAAKR,KAArD,SACE,cAAC,IAAD,WALUQ,EAAKR,Y,gEE0C1BL,eAPS,SAAAC,GAAK,MAAK,MACP,SAAAE,GAAQ,MAAK,CACpCe,QAAS,SAAAL,GACLV,EDjDe,SAAAU,GAAI,MAAK,CAC5BP,KAAMT,EACNU,QAASM,GC+CIK,CAAQL,QAIVb,EA/CE,SAAC,GAAe,IAAdkB,EAAa,EAAbA,QAAa,EACFC,mBAAS,IADP,mBACrBJ,EADqB,KACdK,EADc,KAGtBC,EAAe,SAAAC,GAEjB,GADAA,EAAEC,iBACW,KAAVR,EACC,OAAOS,MAAM,2BAEjB,IAAMX,EAAO,CACTE,QACAV,GAAIoB,cACJR,WAAW,GAEfC,EAAQL,GACRO,EAAS,KAEb,OACG,cAACM,EAAA,EAAD,CAAWf,UAAU,gBAArB,SACG,cAACgB,EAAA,EAAD,CAAMC,SAAUP,EAAhB,SACC,cAACQ,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,CACEzB,KAAK,OACL0B,KAAK,OACL3B,GAAG,OACH4B,YAAY,iBACZC,MAAOnB,EACPoB,SAAU,SAACb,GAAD,OAAMF,EAASE,EAAEc,OAAOF,UAEnC,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACI,cAACC,EAAA,EAAD,CAAQC,MAAQ,OAAOxB,QAASK,EAAhC,+B,gBCpCjBoB,EAAe,GCEfC,EAAcC,YAAgB,CAChCzC,MDDW,WAAmC,IAAlCD,EAAiC,uDAAzBwC,EAAcG,EAAW,uCAC7C,OAAOA,EAAOtC,MACV,KAAKT,EACD,MAAM,GAAN,mBAAWI,GAAX,CAAkB2C,EAAOrC,UAC7B,KAAKT,EACD,OAAOG,EAAM4C,QAAO,SAAAhC,GAAI,OAAIA,EAAKR,KAAOuC,EAAOrC,WACnD,KAAKR,EACD,OAAOE,EAAMW,KAAI,SAACC,GASd,OARGA,EAAKR,IAAMuC,EAAOrC,UACI,GAAlBM,EAAKI,UACJJ,EAAKI,WAAY,EAGjBJ,EAAKI,WAAY,GAGlBJ,KAEf,QACI,OAAOZ,MCXJ6C,EAJDC,YACVL,GCgBWM,MAff,WACE,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,cAACpB,EAAA,EAAD,UACE,cAACuB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,cCLGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4b2899c.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const TOGGLE_COMPLETE = \"TOGGLE_COMPLETE\";","import React from 'react';\r\nimport {ListGroup, ListGroupItem} from 'reactstrap';\r\nimport { FaTrash, FaCheck, FaCheckDouble } from 'react-icons/fa';\r\nimport './index.css';\r\nimport {connect} from \"react-redux\";\r\nimport {removeTodo} from \"../action/todo\";\r\nimport {toggleComplete} from \"../action/todo\";\r\n\r\nconst TodoList = ({todos, toggleComplete, remove}) => {\r\n    \r\n    return ( \r\n        <ListGroup className=\"mt-5 mb-2\">\r\n            {todos.map((todo) => (\r\n                <ListGroupItem key={todo.id} className=\"listRow\">\r\n                    <span>{todo.title}</span> \r\n                    <span>\r\n                        <span className=\"mr-2 icon\" onClick={() => toggleComplete(todo.id) }>{todo.completed? <FaCheckDouble />:<FaCheck />}</span>\r\n                        <span className=\"ml-2 icon\" onClick={()=>remove(todo.id)}>\r\n                          <FaTrash />\r\n                        </span>\r\n                    </span> \r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n     );\r\n}\r\n \r\nconst mapStateToProps = state => ({\r\n    todos: state.todos\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    remove: (id) => {\r\n        dispatch(removeTodo(id))\r\n    },\r\n    toggleComplete : (id) =>{\r\n        dispatch(toggleComplete(id))\r\n    }\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoList);","import {ADD_TODO, TOGGLE_COMPLETE, REMOVE_TODO} from \"./action-types\";\r\n\r\nexport const addTodo = todo => ({\r\n    type: ADD_TODO,\r\n    payload: todo\r\n})\r\n\r\nexport const removeTodo = id => ({\r\n    type: REMOVE_TODO,\r\n    payload: id\r\n})\r\n\r\nexport const toggleComplete = id => ({\r\n    type: TOGGLE_COMPLETE,\r\n    payload: id\r\n})","import React, {useState} from 'react';\r\nimport {Container, FormGroup, Input, Button, Form, InputGroup, InputGroupAddon} from 'reactstrap';\r\nimport { nanoid } from 'nanoid';\r\nimport {connect} from \"react-redux\";\r\nimport {addTodo} from \"../action/todo\";\r\nimport './index.css';\r\n\r\n\r\nconst TodoForm = ({addTodo}) => {\r\n    const [title, setTitle] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(title === '') {\r\n            return alert(\"Please add a todo first\")\r\n        }\r\n        const todo = {\r\n            title,\r\n            id: nanoid(),\r\n            completed: false\r\n        }\r\n        addTodo(todo)\r\n        setTitle('')\r\n    }\r\n    return ( \r\n       <Container className=\"formContainer\">\r\n          <Form onSubmit={handleSubmit}>\r\n           <FormGroup>\r\n               <InputGroup>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"todo\"\r\n                    id=\"todo\"\r\n                    placeholder=\"Your next Todo\"\r\n                    value={title}\r\n                    onChange={(e)=> setTitle(e.target.value)}\r\n                    />\r\n                   <InputGroupAddon addonType=\"prepend\">\r\n                       <Button color = \"dark\" onClick={handleSubmit}>ADD</Button>\r\n                   </InputGroupAddon>\r\n               </InputGroup>\r\n           </FormGroup>\r\n       </Form>\r\n       </Container>\r\n       \r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({}) //not using it here\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTodo: todo => {\r\n        dispatch(addTodo(todo))\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);","import {ADD_TODO, TOGGLE_COMPLETE, REMOVE_TODO} from \"../action/action-types\"\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_TODO:\r\n            return [...state, action.payload]\r\n        case REMOVE_TODO: \r\n            return state.filter(todo => todo.id !== action.payload)\r\n        case TOGGLE_COMPLETE:\r\n            return state.map((todo) => {\r\n                if(todo.id == action.payload){\r\n                    if(todo.completed == true){\r\n                        todo.completed = false\r\n                    }\r\n                    else{\r\n                        todo.completed = true\r\n                    }\r\n                }\r\n                return todo;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers} from \"redux\"\r\n\r\nimport todos from \"./reducer/todo\";\r\n\r\nconst rootReducer = combineReducers({\r\n    todos\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer\r\n)\r\n\r\nexport default store;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport './App.css';\n\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container>\n        <Row>\n          <Col>\n            <TodoList />\n            <TodoForm />\n          </Col>\n        </Row>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}